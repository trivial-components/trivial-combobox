/*! Trivial Components | (c) 2015 Yann Massard and others | Apache License, Version 2.0 (https://raw.githubusercontent.com/trivial-components/trivial-components/master/LICENSE) */
!function(e){if("object"==typeof module&&"object"==typeof module.exports){var t=e(require,exports);void 0!==t&&(module.exports=t)}else"function"==typeof define&&define.amd?define(["require","exports","jquery","mustache","./TrivialTreeBox","./TrivialCore","./TrivialEvent"],e):(window.TrivialComponents=window.TrivialComponents||{},e(function(e){return"jquery"===e?window.jQuery:"levenshtein"===e?window.Levenshtein:"moment"===e?window.moment:"mustache"===e?window.Mustache:window.TrivialComponents},window.TrivialComponents))}(function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=e("jquery"),n=e("mustache"),r=e("./TrivialTreeBox"),o=e("./TrivialCore"),s=e("./TrivialEvent"),a=function(){function e(e,t){void 0===t&&(t={});var a=this;this.onSelectedEntryChanged=new s.TrivialEvent(this),this.onNodeExpansionStateChanged=new s.TrivialEvent(this),this.$spinners=i(),this.config=i.extend({valueFunction:function(e){return e?""+e.id:null},childrenProperty:"children",lazyChildrenFlagProperty:"hasLazyChildren",searchBarMode:"show-if-filled",lazyChildrenQueryFunction:function(e,t){t([])},expandedProperty:"expanded",entryRenderingFunction:function(e,t){var i=[o.DEFAULT_TEMPLATES.icon2LinesTemplate,o.DEFAULT_TEMPLATES.iconSingleLineTemplate],r=e.template||i[Math.min(t,i.length-1)];return n.render(r,e)},spinnerTemplate:o.DEFAULT_TEMPLATES.defaultSpinnerTemplate,noEntriesTemplate:o.DEFAULT_TEMPLATES.defaultNoEntriesTemplate,entries:null,queryFunction:null,selectedEntryId:null,matchingOptions:{matchingMode:"contains",ignoreCase:!0,maxLevenshteinDistance:2},directSelectionViaArrowKeys:!1,performanceOptimizationSettings:{toManyVisibleItemsRenderDelay:750,toManyVisibleItemsThreshold:75}},t),this.config.queryFunction||(this.config.queryFunction=o.defaultTreeQueryFunctionFactory(this.config.entries||[],o.defaultEntryMatchingFunctionFactory(["displayValue","additionalInfo"],this.config.matchingOptions),this.config.childrenProperty,this.config.expandedProperty)),this.entries=this.config.entries,this.$originalInput=i(e).addClass("tr-original-input"),this.$componentWrapper=i('<div class="tr-tree" tabindex="0"/>').insertAfter(this.$originalInput),"always-visible"!==this.config.searchBarMode&&this.$componentWrapper.addClass("hide-searchfield"),this.$componentWrapper.keydown(function(e){if(e.which!=o.keyCodes.tab&&!o.keyCodes.isModifierKey(e))if(a.$editor.is(":visible")&&o.keyCodes.specialKeys.indexOf(e.which)===-1&&a.$editor.focus(),e.which==o.keyCodes.up_arrow||e.which==o.keyCodes.down_arrow){var t=e.which==o.keyCodes.up_arrow?-1:1;if(null!=a.entries)return a.config.directSelectionViaArrowKeys?a.treeBox.selectNextEntry(t,e):a.treeBox.highlightNextEntry(t),!1}else e.which==o.keyCodes.left_arrow||e.which==o.keyCodes.right_arrow?a.treeBox.setHighlightedNodeExpanded(e.which==o.keyCodes.right_arrow):e.which==o.keyCodes.enter?a.treeBox.setSelectedEntry(a.treeBox.getHighlightedEntry(),e):e.which==o.keyCodes.escape?(a.$editor.val(""),a.query(),a.$componentWrapper.focus()):a.query(1)}),this.$editor=i('<input type="text" class="tr-tree-editor tr-editor"/>').prependTo(this.$componentWrapper).attr("tabindex",this.$originalInput.attr("-1")).focus(function(){a.$componentWrapper.addClass("focus")}).blur(function(){a.$componentWrapper.removeClass("focus")}).keydown(function(e){if(e.which==o.keyCodes.left_arrow||e.which==o.keyCodes.right_arrow){var t=a.treeBox.setHighlightedNodeExpanded(e.which==o.keyCodes.right_arrow);return!t&&void 0}}).on("keyup change",function(){"show-if-filled"===a.config.searchBarMode&&(a.$editor.val()?a.$componentWrapper.removeClass("hide-searchfield"):a.$componentWrapper.addClass("hide-searchfield"))}),"none"===this.config.searchBarMode&&this.$editor.css("display","none"),this.$originalInput.attr("placeholder")&&this.$editor.attr("placeholder",this.$originalInput.attr("placeholder")),this.$originalInput.attr("tabindex")&&this.$componentWrapper.attr("tabindex",this.$originalInput.attr("tabindex")),this.$originalInput.attr("autofocus")&&this.$componentWrapper.focus(),this.treeBox=new r.TrivialTreeBox(this.$componentWrapper,this.config),this.treeBox.onNodeExpansionStateChanged.addListener(function(e){a.onNodeExpansionStateChanged.fire(e)}),this.treeBox.onSelectedEntryChanged.addListener(function(){var e=a.treeBox.getSelectedEntry();e&&a.setSelectedEntry(e)}),this.setSelectedEntry(void 0!==this.config.selectedEntryId&&null!==this.config.selectedEntryId?this.findEntryById(this.config.selectedEntryId):null)}return e.prototype.updateEntries=function(e){this.entries=e,this.$spinners.remove(),this.$spinners=i(),this.treeBox.updateEntries(e)},e.prototype.query=function(e){var t=this;if("always-visible"===this.config.searchBarMode||"show-if-filled"===this.config.searchBarMode){var n=i(this.config.spinnerTemplate).appendTo(this.treeBox.getMainDomElement());this.$spinners=this.$spinners.add(n),setTimeout(function(){t.config.queryFunction(t.$editor.val(),function(i){var n=function(){t.updateEntries(i),t.$editor.val().length>0&&(t.treeBox.highlightTextMatches(t.$editor.val()),t.config.directSelectionViaArrowKeys||t.treeBox.highlightNextMatchingEntry(e)),t.treeBox.revealSelectedEntry()};clearTimeout(t.processUpdateTimer),t.countVisibleEntries(i)<t.config.performanceOptimizationSettings.toManyVisibleItemsThreshold?n():t.processUpdateTimer=window.setTimeout(n,t.config.performanceOptimizationSettings.toManyVisibleItemsRenderDelay)})},0)}},e.prototype.countVisibleEntries=function(e){var t=this,i=function(e){return e[t.config.expandedProperty]&&e[t.config.childrenProperty]?e[t.config.childrenProperty].map(function(e){return i(e)}).reduce(function(e,t){return e+t},0)+1:1};return e.map(function(e){return i(e)}).reduce(function(e,t){return e+t},0)},e.prototype.findEntries=function(e){for(var t=this,i=function(n,r){if(e.call(t,n)&&r.push(n),n[t.config.childrenProperty])for(var o=0;o<n[t.config.childrenProperty].length;o++){var s=n[t.config.childrenProperty][o];i(s,r)}},n=[],r=0;r<this.entries.length;r++){var o=this.entries[r];i(o,n)}return n},e.prototype.findEntryById=function(e){var t=this;return this.findEntries(function(i){return t.config.valueFunction(i)===e.toString()})[0]},e.prototype.setSelectedEntry=function(e){this.selectedEntryId=e?this.config.valueFunction(e):null,this.$originalInput.val(e?this.config.valueFunction(e):null),this.fireChangeEvents(e)},e.prototype.fireChangeEvents=function(e){this.$originalInput.trigger("change"),this.$componentWrapper.trigger("change"),this.onSelectedEntryChanged.fire(e)},e.prototype.getSelectedEntry=function(){this.treeBox.getSelectedEntry()},e.prototype.updateChildren=function(e,t){this.treeBox.updateChildren(e,t)},e.prototype.updateNode=function(e){this.treeBox.updateNode(e)},e.prototype.removeNode=function(e){this.treeBox.removeNode(e)},e.prototype.addNode=function(e,t){this.treeBox.addNode(e,t)},e.prototype.selectNodeById=function(e){this.treeBox.setSelectedEntryById(e)},e.prototype.getEditor=function(){return this.$editor[0]},e.prototype.destroy=function(){this.$originalInput.removeClass("tr-original-input").insertBefore(this.$componentWrapper),this.$componentWrapper.remove()},e.prototype.getMainDomElement=function(){return this.$componentWrapper[0]},e}();t.TrivialTree=a});